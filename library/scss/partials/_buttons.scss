@use "../modules/variables" as variables;
@use "sass:color";

// Button Mixins
@mixin button-base {
  font-family: variables.$font-family-brandon;
  font-size: 16px;
  font-weight: 700;
  letter-spacing: 1px;
  text-transform: uppercase;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
  cursor: pointer;
  text-align: center;
  text-shadow: none;
  text-size-adjust: 100%;
  width: auto;
  height: auto;
  border: none;
  border-width: 0;
  border-style: none;
  border-radius: 0;
  padding: 15px 24px 12px 24px;
  margin: 0;
  transition: variables.$transition-base;
}

@mixin button-variant($bg-color, $text-color, $border-color: $bg-color) {
  background: $bg-color;
  color: $text-color;
  border-color: $border-color;

  &:hover,
  &:focus {
    background: $bg-color;
    color: $text-color;
    text-decoration: none;
    font-weight: 800;
  }
}

// Base Button - Increased specificity to override Bootstrap
.btn.btn {
  @include button-base;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }

  &:focus-visible {
    outline: 2px solid variables.$primary-color;
    outline-offset: 2px;
  }

  // Button Elements
  &__text {
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    letter-spacing: inherit;
    text-transform: inherit;
    color: inherit;
    display: inline;
  }

  &__icon {
    font-family: "Font Awesome 5 Pro", "Font Awesome 5 Free", "FontAwesome",
      sans-serif;
    font-size: 20.8px;
    font-style: normal;
    font-weight: variables.$font-weight-normal;
    line-height: 20.8px;
    color: inherit;
    letter-spacing: 1px;
    text-align: center;
    text-rendering: auto;
    text-shadow: none;
    -webkit-font-smoothing: antialiased;
    margin-left: 12px;
    vertical-align: middle;
    display: inline-block;
  }
}

// Button Variants - Increased specificity
.btn.btn--primary {
  @include button-variant(
    variables.$btn-primary-blue,
    variables.$btn-text-color
  );
}

.btn.btn--secondary {
  @include button-variant(
    variables.$white,
    variables.$primary-color,
    variables.$primary-color
  );

  &:hover {
    background-color: variables.$primary-color;
    color: variables.$white;
  }
}

.btn.btn--accent {
  @include button-variant(variables.$accent-color, variables.$white);
}

.btn.btn--ghost {
  @include button-variant(transparent, variables.$primary-color, transparent);

  &:hover {
    background-color: rgba(variables.$primary-color, 0.1);
    color: variables.$primary-color;
  }
}

.btn.btn--gold {
  @include button-variant(variables.$btn-gold, variables.$white);

  &:hover {
    background: variables.$btn-primary-blue;
    border-color: variables.$btn-primary-blue;
    color: variables.$white;
  }
}

// Button Modifiers - Increased specificity
.btn.btn--with-icon {
  gap: variables.$spacing-sm;

  .btn__icon {
    width: 16px;
    height: 16px;
  }
}

.btn.btn--full-width {
  width: 100%;
}

.btn.btn--loading {
  position: relative;
  color: transparent;

  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 16px;
    height: 16px;
    margin: -8px 0 0 -8px;
    border: 2px solid transparent;
    border-top-color: currentColor;
    animation: spin 1s linear infinite;
  }
}

.btn.btn--arrow {
  position: relative;
  overflow: hidden;
  transition: padding-right 0.3s cubic-bezier(0.4, 0, 0.2, 1);

  &::after {
    content: "";
    position: absolute;
    right: 16px;
    top: 50%;
    transform: translateY(-50%) translateX(8px);
    width: 30px;
    height: 13px;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 13' fill='white'%3E%3Cpath d='M1 6.5h20l-5-5v3H1v3h15v3l5-5z'/%3E%3C/svg%3E");
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    opacity: 0;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    pointer-events: none;
  }

  &:hover {
    padding-right: 48px;
  }

  &:hover::after {
    opacity: 1;
    transform: translateY(-50%) translateX(0);
  }

  &:focus-visible::after {
    opacity: 1;
    transform: translateY(-50%) translateX(0);
  }
}

// Button Group
.btn-group {
  display: inline-flex;
  vertical-align: middle;

  .btn {
    position: relative;
    flex: 1 1 auto;
  }
}

// Loading Animation
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
